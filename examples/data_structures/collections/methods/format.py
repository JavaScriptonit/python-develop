# 1) В данном случае строка `'Hello {}'.format(name)` использует метод форматирования строк в Python 
# для вставки значения переменной `name` вместо плейсхолдера `{}`. Таким образом, если `name` содержит какое-то значение, оно будет подставлено вместо `{}` в строку `'Hello {}'` и результат будет строкой `'Hello {значение переменной name}'`.

# 2) Метод `.format()` является методом строк, который используется для форматирования строк, 
# позволяя вставлять значения переменных внутрь строк. Вызов метода `.format(value)` вставляет значение `value` в соответствующий плейсхолдер `{}` внутри строки.

# 3) Форматирование строк в Python 3 - это способ указать какие данные нужно вставить в строку, чтобы она выглядела определенным образом. Помимо метода `.format()`, в Python 3 представлен также "f-строки" (f-strings), которые позволяют включать значения переменных непосредственно в строку с помощью префикса `f` перед строкой и фигурных скобок для вставки значений переменных.

name = 'Andrey'
age = 30

greeting = 'Hello, my name is {} and I am {} years old.'.format(name, age)
print(greeting)

# Можно использовать вместо метода .format() f-строки (f-strings):

greeting2 = f'Hello, my name is {name} and I am {age} years old.'
print(greeting2)
